% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_data.R
\name{simulate_data}
\alias{simulate_data}
\title{Simulate commodity futures data.}
\usage{
simulate_data(par, x0, n_obs, n_contract, func_f, func_g, n_coe, noise, seed)
}
\arguments{
\item{par}{A vector of parameters.}

\item{x0}{Initial values of state variables.}

\item{n_obs}{The number of observations.}

\item{n_contract}{The number of contracts.}

\item{func_f}{Function \code{f}, which should take two arguments, xt and a vector of parameters,
and return two values, the function value f(x) and the gredient f'(x). ( f'(x) is useless in
this function, just make it consistent as used in other functions )}

\item{func_g}{Function \code{g}, which should take three arguments, xt, a vector of parameters
and maturities, and return two values, g(x) and g'(x). ( g'(x) is useless in this function,
just make it consistent as used in other functions )}

\item{n_coe}{The number of model coefficients.}

\item{noise}{The distribution of noise, currently only "Gaussian" works.}

\item{seed}{Integer. Seed for random values.}
}
\value{
This function returns a \code{list} with components:
\item{yt}{A data frame. Commodity futures price.}
\item{mats}{A data frame. Time to maturity. It has the same dimension as \code{yt}.}
\item{xt}{A data frame. Hidden state variables. }
}
\description{
Simulate commodity futures price, time to maturity, and hidden factors based on state-space
model. See \code{Details} for more information about the model.
}
\details{
The state-space model is give by
\deqn{y_t = g(x_t, m_t) + u_t}
\deqn{x_t = f(x_{t-1}, m_t) + v_t}
where \eqn{y_t} is the futures price, \eqn{x_t} is the hidden state variable, \eqn{m_t} is
the time to maturity, \eqn{u_t} and \eqn{v_t} are noises with mean 0.
}
\examples{
n_obs <- 100
n_contract <- 10
par <- c(0.5, 0.3, 1, 1.5, 1.3, -0.3, 0.5, 0.3, seq(from = 0.1, to = 0.01, length.out = n_contract))
x0 <- c(0, 1/0.3)
dt <- 1/360 # daily data
n_coe <- 0
func_f <- function(xt, par) state_linear(xt, par, dt) # state equation
dat <- simulate_data(par, x0, n_obs, n_contract, func_f, measurement_linear, n_coe, "Gaussian", 1234)
}
\seealso{
\link{state_linear}, \link{measurement_linear}, \link{measurement_polynomial} for examples of function
\code{f} and \code{g}.
}
